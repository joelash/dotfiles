#terminal name

function tName {
  unset PROMPT_COMMAND
  echo -ne "\033]0;$1\007"
}

function _t {
  tName ${PWD##*/}
}

function st {
  if [[ -d ".svn" ]]; then
    svn status
  else
    git status
  fi
}

function tmux {
  if [[ -n "$3" ]]; then
    tName $3
  fi
  command tmux $@
}

function _nginx {
  case $1 in
    outpace)
      nginx -s stop
      unlink /usr/local/etc/nginx/nginx.conf
      ln -s ~/src/outpace/starwood/customer_mvp/nginx_config/dev.nginx.conf /usr/local/etc/nginx/nginx.conf
      nginx
      ;;
    acl)
      nginx -s stop
      unlink /usr/local/etc/nginx/nginx.conf
      ln -s ~/src/bitbucket/aclaimant/nginx/dev.nginx.conf /usr/local/etc/nginx/nginx.conf
      nginx
      ;;
    default)
      nginx -s stop
      unlink /usr/local/etc/nginx/nginx.conf
      ln -s /usr/local/etc/nginx/nginx.conf.base /usr/local/etc/nginx/nginx.conf
      nginx
      ;;
    *)
      ls -l /usr/local/etc/nginx/nginx.conf | cut -d '>' -f2
  esac
}

# random

function any() {
  local grep_command="grep $1"
  ps -ef | grep -v grep | $grep_command
}

function gt() {
  local jump_command="j $@"
  $jump_command && _t
}
alias t='gt'

# git
function parse_git_dirty {
  [[ $(git status 2> /dev/null | tail -n1) != "nothing to commit, working directory clean" ]] && echo "*"
}
# display
function parse_git_branch {
  local branch=$(git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/(\1$(parse_git_dirty))/")
  if [[ -n "${branch}" ]]; then
    echo " ${branch}"
  fi
}

function __parse_git_branch__ {
  git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/(\1$(parse_git_dirty))/"
}

function __current_git_branch_easy__ {
  git name-rev --name-only HEAD
}

function __branch_current_is_tracking__ {
  local current_branch=$(__current_git_branch_easy__)
  git config branch.$current_branch.merge | cut -d'/' -f3
}

function parse_rvm_gemset {
  echo $GEM_HOME | sed 's/.*\///'
}

# ok so I want to capture last SHA I saw at night so I can diff them in the morning
function cd-git-root {
  cd "$(git rev-parse --show-toplevel)"
}

function top-commit-sha {
  echo "$(git log --oneline | head -1 | cut -d ' ' -f 1)"
}

function pull-with-diff {
  local last="$(top-commit-sha)"
  git pull
  local current="$(top-commit-sha)"
  echo "Difftool of $last to $current"
  git difftool $last $current
}
# From: http://www.reddit.com/r/zsh/comments/vopro/truncated_path_in_zsh_prompt/c5ecfb3
function collapse_pwd {
  echo $(pwd | sed -e "s,^$HOME,~,")
}

function truncated_pwd() {
  local n=$1 # n = number of directories to show in full (n = 3, /a/b/c/dee/ee/eff)
  local path=$(collapse_pwd)

  # split our path on /
  IFS=/ read -a dirs <<< "$path"
  local dirs_length=${#dirs[@]}

  local result=""
  local max=$(($dirs_length - $n))
  for (( i = 0; i < $dirs_length; i++ )); do
    step="${dirs[$i]}"

    local intermediate="${step:0:1}"
    if [[ $i -ge $max ]]; then
      intermediate="${step}"
    elif [[ "$intermediate" = "." ]]; then
      intermediate="${step:0:2}"
    fi

    if [[ -z "$result" ]] && [[ "$intermediate" = "~" ]]; then
      result="$intermediate"
    elif [[ -n "$step" ]]; then
      result="$result/$intermediate"
    fi

  done

  echo $result
}

function start-gpg-agent {
  export GPG_AGENT_INFO_FILE=$HOME/.gpg-agent-info
  gpg-agent --daemon --enable-ssh-support --write-env-file "${GPG_AGENT_INFO_FILE}"

  if [ -f "${GPG_AGENT_INFO_FILE}" ]; then
    . "${GPG_AGENT_INFO_FILE}"
    export GPG_AGENT_INFO
    export SSH_AUTH_SOCK
    export SSH_AGENT_PID
  fi

  export GPG_TTY=$(tty)
}
